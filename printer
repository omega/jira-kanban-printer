#!/usr/bin/env perl

use strict;
use warnings;

use Config::JFDI;
my $cfg = Config::JFDI->new(name => 'config')->get;

use Directory::Queue;

use Net::CUPS;
use Net::CUPS::Destination;

my $dest = Net::CUPS->new()->getDestination();
foreach my $k (keys %{ $cfg->{printer}->{opts} }) {
    $dest->addOption($k => $cfg->{printer}->{opts}->{$k});
}

my $O = Directory::Queue->new(%{ $cfg->{printqueue} });

while (1) {
    my $e = $O->next || $O->first;
    unless ($e) {
        sleep 1;
        next;
    }
    next unless $O->lock($e);
    my %e = $O->get($e);
    $O->remove($e);

    # Print it
    # XXX: This should be async ideally, since we are in an event loop
    warn "  -- >> Printing $e{path}";
    $dest->printFile($e{path}, "Printing file from queue");

    # remove it!
    unlink($e{path}) or warn "error unlinking: $e";
}
